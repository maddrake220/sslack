{"version":3,"sources":["webpack://sslack/./components/InviteChannelModal/index.tsx","webpack://sslack/./components/Modal/styles.tsx","webpack://sslack/./components/Modal/index.tsx","webpack://sslack/./hooks/useSocket.ts","webpack://sslack/./layouts/Workspace/styles.tsx","webpack://sslack/./components/Menu/styles.tsx","webpack://sslack/./components/Menu/index.tsx","webpack://sslack/./components/CreateChannelModal/index.tsx","webpack://sslack/./components/InviteWorkspaceModal/index.tsx","webpack://sslack/./components/DMList/styles.tsx","webpack://sslack/./components/ChannelList/index.tsx","webpack://sslack/./components/DMList/index.tsx","webpack://sslack/./layouts/Workspace/index.tsx"],"names":["show","onCloseModal","setShowInviteChannelModal","newInviteMember","onChangeNewInviteMember","setNewInviteMember","useInput","data","userData","useSWR","fetcher","dedupingInterval","workspace","channel","useParams","revalidate","revalidateMembers","onInviteSubmit","useCallback","e","preventDefault","trim","axios","email","then","catch","error","console","dir","toast","response","position","onSubmit","id","type","value","onChange","CreateModal","CloseModalButton","children","stopPropagation","onClick","sockets","disconnect","log","io","transports","undefined","RightMenu","Header","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","CreateMenu","Menu","style","closeButton","defaultProps","setShowCreateChannelModal","newChannel","onChangeNewChannel","setNewChannel","mutate","channelData","revalidateChannel","onCreateChannel","name","withCredentials","Modal","setShowInviteWorkspaceModal","CollapseButton","collapse","channelCollapse","setChannelCollapse","useState","toggleChannelCollapse","prev","className","data-qa","aria-hidden","map","key","activeClassName","to","memberData","onlineList","setOnlineList","socket","useSocket","useEffect","on","off","member","isOnline","includes","nickname","Channel","loadable","DirectMessage","showUserMenu","setShowUserMenu","showCreateWorkspaceModal","setShowCreateWorkspaceModal","newWorkspace","onChangeNewWorkspace","setNewWorkspace","newWorkspaceUrl","onChangeNewWorkspaceUrl","setNewWorkspaceUrl","showWorkspaceModal","setShowWorkspaceModal","showCreateChannelModal","showInviteWorkspaceModal","showInviteChannelModal","emit","channels","v","onLogout","onClickUserProfile","onClickCreateWorksapce","onCreateWorkspace","url","toggleWorkspaceModal","onClickAddChannel","onClickInviteWorkspace","src","gravatar","s","d","alt","right","top","ws","slice","toUpperCase","left","path","component","InviteChannelModal"],"mappings":"uNAiBA,MA8CA,EA9CuC,EAAGA,OAAMC,eAAcC,gCAC5D,MAAOC,EAAiBC,EAAyBC,IAAsBC,OAAS,KACxEC,KAAMC,IAAaC,QAAsB,aAAcC,IAAS,CACtEC,iBAAkB,OAEd,UAAEC,EAAF,QAAaC,IAAYC,WACvBC,WAAYC,IAAsBP,QACxCD,GAAYK,EAAW,mBAAkBD,cAAsBC,YAAoB,KACnFH,KAEIO,GAAiBC,kBACpBC,IACCA,EAAEC,iBACGjB,GAAoBA,EAAgBkB,QAEzCC,SACS,mBAAkBV,cAAsBC,YAAmB,CAChEU,MAAOpB,IAERqB,MAAK,KACJR,IACAX,EAAmB,IACnBH,GAA0B,MAE3BuB,OAAOC,IACNC,QAAQC,IAAIF,GACZG,WAAYH,EAAMI,SAASvB,KAAM,CAC/BwB,SAAU,uBAIlB,CAAC5B,IAEH,OACE,gBAAC,IAAD,CAAOH,KAAMA,EAAMC,aAAcA,GAC/B,wBAAM+B,SAAUf,GACd,gBAAC,KAAD,KACE,mCACA,gBAAC,KAAD,CAAOgB,GAAG,SAASC,KAAK,QAAQC,MAAOhC,EAAiBiC,SAAUhC,KAEpE,gBAAC,KAAD,CAAQ8B,KAAK,UAAb,c,qECvDD,MAAMG,GAAc,cAAH,oBAAG,CAAH,6bAsBXC,GAAmB,iBAAH,oBAAG,CAAH,iICA7B,EAjByB,EAAGC,WAAUvC,OAAMC,mBAC1C,MAAMuC,GAAkBtB,kBAAaC,IACnCA,EAAEqB,oBACD,IACH,OAAKxC,EAIH,gBAACqC,EAAD,CAAaI,QAASxC,GACpB,uBAAKwC,QAASD,GACZ,gBAACF,EAAD,CAAkBG,QAASxC,GAA3B,KACCsC,IANE,O,8ECTX,MACMG,EAAoD,GA+C1D,EAhCmB9B,IACjB,MAAM+B,GAAazB,kBAAY,KACzBN,IACF8B,EAAQ9B,GAAW+B,kBACZD,EAAQ9B,MAEhB,IAGH,OAFAe,QAAQiB,IAAIhC,GAEPA,GAKA8B,EAAQ9B,KACX8B,EAAQ9B,GAAaiC,YAAY,4BAAgBjC,IAAa,CAC5DkC,WAAY,CAAC,gBASV,CAACJ,EAAQ9B,GAAY+B,IAfnB,MAACI,EAAWJ,K,8LC3BhB,MAAMK,GAAY,cAAH,qBAAG,CAAH,sCAITC,GAAS,iBAAH,qBAAG,CAAH,mJASNC,GAAa,cAAH,qBAAG,CAAH,uFAQVC,GAAe,cAAH,qBAAG,CAAH,gPAqBZC,GAAe,iBAAH,oBAAG,CAAH,wLAYZC,GAAmB,cAAH,oBAAG,CAAH,8CAKhBC,GAAa,cAAH,oBAAG,CAAH,wPAaVC,GAAW,cAAH,oBAAG,CAAH,wnBA+CRC,GAAgB,iBAAH,oBAAG,CAAH,4VAqBbC,GAAa,cAAH,oBAAG,CAAH,sEAKVC,GAAiB,cAAH,oBAAG,CAAH,iQAmBdC,GAAQ,cAAH,oBAAG,CAAH,iCAILC,GAAY,iBAAH,oBAAG,CAAH,mJAWTC,GAAkB,iBAAH,oBAAG,CAAH,gNCnLfC,GAAa,cAAH,oBAAG,CAAH,0bAsBVxB,GAAmB,iBAAH,oBAAG,CAAH,iICdvByB,EAAkB,EAAGxB,WAAUyB,QAAOhE,OAAMC,eAAcgE,kBAC9D,MAAMzB,GAAkBtB,kBAAaC,IACnCA,EAAEqB,oBAED,IAEH,OAAKxC,EAGH,gBAAC8D,EAAD,CAAYrB,QAASxC,GACnB,uBAAK+D,MAAOA,EAAOvB,QAASD,GACzByB,GAAe,gBAAC3B,EAAD,CAAkBG,QAASxC,GAA3B,KACfsC,IANW,MAYpBwB,EAAKG,aAAe,CAClBD,aAAa,GAEf,U,wBCdA,MAsDA,EAtDuC,EAAGjE,OAAMC,eAAckE,gCAC5DxC,QAAQiB,IAAI5C,GACZ,MAAOoE,EAAYC,EAAoBC,IAAiBhE,OAAS,KAC3D,UAAEM,EAAF,QAAaC,IAAYC,WAE7BP,KAAMC,EADF,MAEJkB,EAFI,WAGJX,EAHI,OAIJwD,IACE9D,QAAsB,aAAcC,IAAS,CAC/CC,iBAAkB,OAEZJ,KAAMiE,EAAazD,WAAY0D,IAAsBhE,QAC3DD,EAAY,mBAAkBI,aAAuB,KACrDF,KAEIgE,GAAkBxD,kBACrBC,IACCA,EAAEC,iBACFE,SAEK,mBAAkBV,aACnB,CACE+D,KAAMP,GAER,CACEQ,iBAAiB,IAGpBpD,MAAK,KACJ2C,GAA0B,GAC1BM,IACAH,EAAc,OAEf7C,OAAOC,IACNC,QAAQC,IAAIF,GACZG,WAAYH,EAAMI,SAASvB,KAAM,CAAEwB,SAAU,uBAGnD,CAACqC,IAEH,OACE,gBAACS,EAAA,EAAD,CAAO7E,KAAMA,EAAMC,aAAcA,GAC/B,wBAAM+B,SAAU0C,GACd,gBAAC,KAAD,CAAOzC,GAAG,iBACR,qCACA,gBAAC,KAAD,CAAOA,GAAG,UAAUE,MAAOiC,EAAYhC,SAAUiC,KAEnD,gBAAC,KAAD,CAAQnC,KAAK,UAAb,WCFR,EA9CyC,EAAGlC,OAAMC,eAAc6E,kCAC9D,MAAO3E,EAAiBC,EAAyBC,IAAsBC,OAAS,KACxEC,KAAMC,IAAaC,QAAsB,aAAcC,IAAS,CACtEC,iBAAkB,OAEd,UAAEC,EAAF,QAAaC,IAAYC,WACvBC,WAAYC,IAAsBP,QACxCD,EAAY,mBAAkBI,YAAsB,KACpDF,KAEIO,GAAiBC,kBACpBC,IACCA,EAAEC,iBACGjB,GAAoBA,EAAgBkB,QAEzCC,SACS,mBAAkBV,YAAqB,CAC5CW,MAAOpB,IAERqB,MAAK,KACJR,IACAX,EAAmB,IACnByE,GAA4B,MAE7BrD,OAAOC,IACNC,QAAQC,IAAIF,GACZG,WAAYH,EAAMI,SAASvB,KAAM,CAC/BwB,SAAU,uBAIlB,CAAC5B,IAEH,OACE,gBAAC0E,EAAA,EAAD,CAAO7E,KAAMA,EAAMC,aAAcA,GAC/B,wBAAM+B,SAAUf,GACd,gBAAC,KAAD,KACE,mCACA,gBAAC,KAAD,CAAOgB,GAAG,SAASC,KAAK,QAAQC,MAAOhC,EAAiBiC,SAAUhC,KAEpE,gBAAC,KAAD,CAAQ8B,KAAK,UAAb,a,cCvDD,MAAM6C,GAAiB,iBAAH,oBAAG,CAAH,wKAWvB,EAAGC,cACHA,GACC,kDAbsB,KCuD3B,EAhDwB,KACtB,MAAM,UAAEpE,IAAcE,WAGpBP,KAAMC,EADF,MAEJkB,EAFI,WAGJX,EAHI,OAIJwD,IACE9D,QAAc,aAAcC,IAAS,CACvCC,iBAAkB,OAEZJ,KAAMiE,IAAgB/D,QAAmBD,EAAY,mBAAkBI,aAAuB,KAAMF,MACrGuE,EAAiBC,IAAsBC,eAAS,GAEjDC,GAAwBlE,kBAAY,KACxCgE,GAAoBG,IAAUA,MAC7B,IAEH,OACE,gCACE,0BACE,gBAACN,EAAD,CAAgBC,SAAUC,EAAiBxC,QAAS2C,GAClD,qBACEE,UAAU,mKACVC,UAAQ,2BACRC,cAAY,UAGhB,yCAEF,4BACIP,IACAT,aADD,EACCA,EAAaiB,KAAK5E,GAEd,gBAAC,KAAD,CACE6E,IAAK7E,EAAQ8D,KACbgB,gBAAgB,WAChBC,GAAK,cAAahF,aAAqBC,EAAQ8D,QAE/C,iCAAS9D,EAAQ8D,a,cCtCjC,MAyEA,EAzEmB,KACjB,MAAM,UAAE/D,IAAcE,WAEpBP,KAAMC,EADF,MAEJkB,EAFI,WAGJX,EAHI,OAIJwD,IACE9D,QAAc,aAAcC,IAAS,CACvCC,iBAAkB,OAEZJ,KAAMsF,IAAepF,QAC3BD,EAAY,mBAAkBI,YAAsB,KACpDF,MAGKuE,EAAiBC,IAAsBC,eAAS,IAChDW,EAAYC,IAAiBZ,cAAmB,KAChDa,EAAQrD,IAAcsD,OAAUrF,GAEjCwE,GAAwBlE,kBAAY,KACxCgE,GAAoBG,IAAUA,MAC7B,IAqBH,OAnBAa,gBAAU,KACRvE,QAAQiB,IAAI,wBAAyBhC,GACrCmF,EAAc,MACb,CAACnF,KAEJsF,gBAAU,KACRF,WAAQG,GAAG,cAAe5F,IACxBoB,QAAQiB,IAAI,UAAWrC,GACvBwF,EAAcxF,MAIT,KAGLyF,WAAQI,IAAI,iBAEb,CAACJ,IAGF,gCACE,0BACE,gBAACjB,EAAD,CAAgBC,SAAUC,EAAiBxC,QAAS2C,GAClD,qBACEE,UAAU,mKACVC,UAAQ,2BACRC,cAAY,UAGhB,gDAEF,2BACGM,GAAcnE,QAAQiB,IAAI,eAAgBkD,IACzCb,IACAY,aADD,EACCA,EAAYJ,KAAKY,IACf,MAAMC,EAAWR,EAAWS,SAASF,EAAOpE,IAE5C,OADAN,QAAQiB,IAAI,cAAe0D,EAAU,gBAAiBR,EAAY,eAAgBO,EAAOpE,IAEvF,gBAAC,KAAD,CAASyD,IAAKW,EAAOpE,GAAI0D,gBAAgB,WAAWC,GAAK,cAAahF,QAAgByF,EAAOpE,MAC3F,4BAAOqE,EAAW,IAAM,KACxB,4BAAOD,EAAOG,UACbH,EAAOpE,MAAOzB,aAAd,EAAcA,EAAUyB,KAAM,4CCrCzCwE,GAAUC,SAAS,IAAM,gEACzBC,GAAgBD,SAAS,IAAM,+DA2MrC,EAzMuB,KAAM,MAC3B,MAAOE,EAAcC,IAAmB1B,eAAS,IAC1C2B,EAA0BC,IAA+B5B,eAAS,IAClE6B,EAAcC,EAAsBC,IAAmB5G,OAAS,KAChE6G,EAAiBC,EAAyBC,IAAsB/G,OAAS,KACzEgH,EAAoBC,IAAyBpC,eAAS,IACtDqC,EAAwBrD,IAA6BgB,eAAS,IAC9DsC,EAA0B3C,IAA+BK,eAAS,IAClEuC,EAAwBxH,IAA6BiF,eAAS,IAE/D,UAAEvE,IAAcE,WAEpBP,KAAMC,GADF,MAEJkB,GAFI,WAGJX,GAHI,OAIJwD,KACE9D,QAAsB,aAAcC,IAAS,CAC/CC,iBAAkB,OAEZJ,KAAMiE,KAAgB/D,QAAmBD,GAAY,mBAAkBI,aAAuB,KAAMF,MAGrGsF,GAAQrD,KAAcsD,OAAUrF,IACvCsF,gBAAU,KACJ1B,IAAehE,IAAYwF,KAC7BrE,QAAQiB,IAAI,SAAUoD,IACtBA,GAAO2B,KAAK,QAAS,CACnB1F,GAAIzB,GAASyB,GACb2F,SAAUpD,GAAYiB,KAAKoC,GAAMA,EAAE5F,UAGtC,CAACuC,GAAahE,GAAUwF,MAG3BE,gBAAU,IACD,KACLvD,OAED,CAAC/B,EAAW+B,KAGf,MAAMmF,IAAW5G,kBAAY,KAC3BI,SACQ,oBAAqB,KAAM,CAC/BsD,iBAAiB,IAElBpD,MAAK,KACJ+C,IAAO,GAAO,MAEf9C,OAAOC,UACT,IAEGqG,IAAqB7G,kBAAaC,IACtCA,EAAEqB,kBACFqE,GAAiBxB,IAAUA,MAC1B,IAEG2C,IAAyB9G,kBAAaC,IAC1C4F,GAA4B,KAC3B,IAEGkB,IAAoB/G,kBACvBC,IACCA,EAAEC,iBACG4F,GAAiBA,EAAa3F,QAC9B8F,GAAoBA,EAAgB9F,QAEzCC,SAEI,kBACA,CACEV,UAAWoG,EACXkB,IAAKf,GAEP,CACEvC,iBAAiB,IAGpBpD,MAAK,KACJT,KACAgG,GAA4B,GAC5BG,EAAgB,IAChBG,EAAmB,OAEpB5F,OAAOC,IAAU,MAChBC,QAAQC,IAAIF,GACZG,WAAA,UAAYH,EAAMI,gBAAlB,aAAY,EAAgBvB,KAAM,CAAEwB,SAAU,uBAGpD,CAACiF,EAAcG,IAGXlH,IAAeiB,kBAAY,KAC/B6F,GAA4B,GAC5B5C,GAA0B,GAC1BW,GAA4B,GAC5B5E,GAA0B,KACzB,IAEGiI,IAAuBjH,kBAAY,KACvCqG,GAAuBlC,IAAUA,MAChC,IAEG+C,IAAoBlH,kBAAaC,IACrCgD,GAA0B,KACzB,IAEGkE,IAAyBnH,kBAAaC,IAC1C2D,GAA4B,KAC3B,IAEH,OAAKtE,QAGYuC,IAAbvC,GACK,sCAGP,2BACE,gBAACyC,EAAD,KACE,gBAACD,EAAD,KACE,wBAAMP,QAASsF,IACb,gBAAC7E,EAAD,CAAYoF,IAAKC,QAAa/H,GAASe,MAAO,CAAEiH,EAAG,OAAQC,EAAG,UAAYC,IAAKlI,GAASe,QACvFqF,GACC,gBAAC,EAAD,CAAM5C,MAAO,CAAE2E,MAAO,EAAGC,IAAK,IAAM5I,KAAM4G,EAAc3G,aAAc8H,IACpE,gBAAC5E,EAAD,KACE,uBAAKmF,IAAKC,QAAa/H,GAASe,MAAO,CAAEiH,EAAG,OAAQC,EAAG,UAAYC,IAAKlI,GAASe,QACjF,2BACE,wBAAMU,GAAG,gBAAgBzB,GAASgG,UAClC,wBAAMvE,GAAG,kBAAT,YAGJ,gBAACmB,EAAD,CAAcX,QAASqF,IAAvB,YAMV,gBAACzE,EAAD,KACE,gBAACC,EAAD,KACG9C,UADH,UACGA,GAAU8C,kBADb,aACG,EAAsBmC,KAAKoD,GAC1B,gBAAC,KAAD,CAAMnD,IAAKmD,EAAG5G,GAAI2D,GAAK,6BACrB,gBAAC/B,EAAD,KAAkBgF,EAAGlE,KAAKmE,MAAM,EAAG,GAAGC,kBAG1C,gBAACnF,EAAD,CAAWnB,QAASuF,IAApB,MAEF,gBAACzE,EAAD,KACE,gBAACC,EAAD,CAAef,QAAS0F,IAAxB,UACA,gBAAC1E,EAAD,KACE,gBAAC,EAAD,CAAMzD,KAAMsH,EAAoBrH,aAAckI,GAAsBnE,MAAO,CAAE4E,IAAK,GAAII,KAAM,KAC1F,gBAACtF,EAAD,KACE,oCACA,0BAAQjB,QAAS4F,IAAjB,kBACA,0BAAQ5F,QAAS2F,IAAjB,SACA,0BAAQ3F,QAASqF,IAAjB,UAGJ,gBAAC,EAAD,MACA,gBAAC,EAAD,QAGJ,gBAACnE,EAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAOsF,KAAK,yCAAyCC,UAAWzC,IAChE,gBAAC,KAAD,CAAOwC,KAAK,+BAA+BC,UAAWvC,OAI5D,gBAAC9B,EAAA,EAAD,CAAO7E,KAAM8G,EAA0B7G,aAAcA,IACnD,wBAAM+B,SAAUiG,IACd,gBAAC,KAAD,CAAOhG,GAAG,mBACR,yCACA,gBAAC,KAAD,CAAOA,GAAG,YAAYE,MAAO6E,EAAc5E,SAAU6E,KAEvD,gBAAC,KAAD,CAAOhF,GAAG,uBACR,0CACA,gBAAC,KAAD,CAAOA,GAAG,YAAYE,MAAOgF,EAAiB/E,SAAUgF,KAE1D,gBAAC,KAAD,CAAQlF,KAAK,UAAb,UAGJ,gBAAC,EAAD,CACElC,KAAMwH,EACNvH,aAAcA,GACdkE,0BAA2BA,IAE7B,gBAAC,EAAD,CACEnE,KAAMyH,EACNxH,aAAcA,GACd6E,4BAA6BA,IAE/B,gBAACqE,EAAA,EAAD,CACEnJ,KAAM0H,EACNzH,aAAcA,GACdC,0BAA2BA,KAnFxB,gBAAC,KAAD,CAAU0F,GAAG,a","file":"477.js","sourcesContent":["import React, { useCallback, VFC } from 'react';\r\nimport Modal from '@components/Modal';\r\nimport { Button, Input, Label } from '@pages/Signup/styles';\r\nimport useInput from '@hooks/useInput';\r\nimport axios from 'axios';\r\nimport useSWR from 'swr';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface Props {\r\n  show?: boolean;\r\n  onCloseModal: () => void;\r\n  setShowInviteChannelModal: (flag: boolean) => void;\r\n}\r\n\r\nconst InviteChannelModal: VFC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\r\n  const [newInviteMember, onChangeNewInviteMember, setNewInviteMember] = useInput('');\r\n  const { data: userData } = useSWR<IUser | false>('/api/users', fetcher, {\r\n    dedupingInterval: 2000,\r\n  });\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const { revalidate: revalidateMembers } = useSWR<IChannel[]>(\r\n    userData && channel ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\r\n    fetcher,\r\n  );\r\n  const onInviteSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newInviteMember || !newInviteMember.trim()) return;\r\n\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\r\n          email: newInviteMember,\r\n        })\r\n        .then(() => {\r\n          revalidateMembers();\r\n          setNewInviteMember('');\r\n          setShowInviteChannelModal(false);\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response.data, {\r\n            position: 'bottom-center',\r\n          });\r\n        });\r\n    },\r\n    [newInviteMember],\r\n  );\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteSubmit}>\r\n        <Label>\r\n          <span>이메일</span>\r\n          <Input id=\"member\" type=\"email\" value={newInviteMember} onChange={onChangeNewInviteMember} />\r\n        </Label>\r\n        <Button type=\"submit\">사용자 초대</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteChannelModal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CreateModal = styled.div`\r\n  position: fixed;\r\n  top: 30;\r\n  right: 0;\r\n  left: 30;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  & > div {\r\n    position: absolute;\r\n    display: inline-block;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    min-width: 360px;\r\n    z-index: 512;\r\n    max-height: calc(100vh - 20px);\r\n    color: rgb(29, 28, 29);\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import React, { FC, useCallback } from 'react';\r\nimport { CreateModal, CloseModalButton } from './styles';\r\ninterface Props {\r\n  show?: boolean;\r\n  onCloseModal: () => void;\r\n}\r\n\r\nconst Modal: FC<Props> = ({ children, show, onCloseModal }) => {\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  return (\r\n    <CreateModal onClick={onCloseModal}>\r\n      <div onClick={stopPropagation}>\r\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\r\n        {children}\r\n      </div>\r\n    </CreateModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import io from 'socket.io-client';\r\nimport { useCallback } from 'react';\r\n\r\nconst baseUrl = 'http://localhost:3095';\r\nconst sockets: { [key: string]: SocketIOClient.Socket } = {};\r\n\r\n/*\r\n  socketIO 는 백엔드와 프론트가 버전이 같아야 한다.\r\n  \r\n  Network Logs\r\n  connected : 연결\r\n  disconnected : 비연결\r\n  receiveBuffer :  receiveBuffer 서버에서 클라이언트로 데이터가 와야 하는데 그렇지 못한 버퍼들이 남아있다. receiveBuffer 는 거의 항상 비어있어야 한다.\r\n  sendBuffer :  데이터를 서버에 보내야 하는데 그렇지 못한 상황의 데이터가 버퍼로 남아있다.\r\n  _callback : data\r\n\r\n  Message에서 2(클라->서버), 3(서버->클라) 뜨는 이유 :pingpong이라 부름, 계속해서 연결을 확인 시켜주기위해\r\n\r\n*/\r\nconst useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\r\n  const disconnect = useCallback(() => {\r\n    if (workspace) {\r\n      sockets[workspace].disconnect;\r\n      delete sockets[workspace];\r\n    }\r\n  }, []);\r\n  console.log(workspace);\r\n\r\n  if (!workspace) {\r\n    return [undefined, disconnect];\r\n    // hook rerendering 방지\r\n  }\r\n\r\n  if (!sockets[workspace]) {\r\n    sockets[workspace] = io.connect(`${baseUrl}/ws-${workspace}`, {\r\n      transports: ['websocket'],\r\n      // websocket은 먼저 브라우저에 websocket을 지원하는지 http로 확인한 후 websocket으로 전환\r\n      // 하지만 최근 버전의 ie 와 대부분의 브라우저는 websocket을 지원\r\n      // 따라서 transports:['websocket']을 통해 폴링하지말고 websocket만 쓰라고 지시\r\n      // => http 연결 안하고 websocket연결을 바로함\r\n      //\r\n    });\r\n  }\r\n\r\n  return [sockets[workspace], disconnect];\r\n};\r\n// socket사용할 때 주의 할점\r\n// 경로 지정을 잘 해줘야한다.\r\n// connect와 disconnect 잘 해줘야 한다.\r\n// front단에서는 connect, emit, on, disconnect\r\n\r\nexport default useSocket;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const RightMenu = styled.div`\r\n  float: right;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 38px;\r\n  background: #350d36;\r\n  color: #ffffff;\r\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\r\n  padding: 5px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ProfileImg = styled.img`\r\n  width: 28px;\r\n  height: 28px;\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 16px;\r\n`;\r\n\r\nexport const ProfileModal = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  & img {\r\n    display: flex;\r\n  }\r\n  & > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 10px;\r\n  }\r\n  & #profile-name {\r\n    font-weight: bold;\r\n    display: inline-flex;\r\n  }\r\n  & #profile-active {\r\n    font-size: 13px;\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nexport const LogOutButton = styled.button`\r\n  border: none;\r\n  width: 100%;\r\n  border-top: 1px solid rgb(29, 28, 29);\r\n  background: transparent;\r\n  display: block;\r\n  height: 33px;\r\n  padding: 5px 20px 5px;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Workspaces = styled.div`\r\n  width: 65px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #3f0e40;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-right: 1px solid rgb(82, 38, 83);\r\n  vertical-align: top;\r\n  text-align: center;\r\n  padding: 15px 0 0;\r\n`;\r\n\r\nexport const Channels = styled.nav`\r\n  width: 260px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  background: #3f0e40;\r\n  color: rgb(188, 171, 188);\r\n  vertical-align: top;\r\n  & a {\r\n    padding-left: 36px;\r\n    color: inherit;\r\n    text-decoration: none;\r\n    height: 28px;\r\n    line-height: 28px;\r\n    display: flex;\r\n    align-items: center;\r\n    &.selected {\r\n      color: white;\r\n    }\r\n  }\r\n  & .bold {\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n  & .count {\r\n    margin-left: auto;\r\n    background: #cd2553;\r\n    border-radius: 16px;\r\n    display: inline-block;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    height: 18px;\r\n    line-height: 18px;\r\n    padding: 0 9px;\r\n    color: white;\r\n    margin-right: 16px;\r\n  }\r\n  & h2 {\r\n    height: 36px;\r\n    line-height: 36px;\r\n    margin: 0;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const WorkspaceName = styled.button`\r\n  height: 64px;\r\n  line-height: 64px;\r\n  border: none;\r\n  width: 100%;\r\n  text-align: left;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-bottom: 1px solid rgb(82, 38, 83);\r\n  font-weight: 900;\r\n  font-size: 24px;\r\n  background: transparent;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  padding: 0;\r\n  padding-left: 16px;\r\n  margin: 0;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MenuScroll = styled.div`\r\n  height: calc(100vh - 102px);\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const WorkspaceModal = styled.div`\r\n  padding: 10px 0 0;\r\n  & h2 {\r\n    padding-left: 20px;\r\n  }\r\n  & > button {\r\n    width: 100%;\r\n    height: 28px;\r\n    padding: 4px;\r\n    border: none;\r\n    background: transparent;\r\n    border-top: 1px solid rgb(28, 29, 28);\r\n    cursor: pointer;\r\n    &:last-of-type {\r\n      border-bottom: 1px solid rgb(28, 29, 28);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Chats = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const AddButton = styled.button`\r\n  color: white;\r\n  font-size: 24px;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceButton = styled.button`\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  background: white;\r\n  border: 3px solid #3f0e40;\r\n  margin-bottom: 15px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: black;\r\n  cursor: pointer;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CreateMenu = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  & > div {\r\n    position: absolute;\r\n    display: inline-block;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    min-width: 360px;\r\n    z-index: 512;\r\n    max-height: calc(100vh - 20px);\r\n    color: rgb(29, 28, 29);\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import React, { CSSProperties, FC, useCallback } from 'react';\r\nimport { CreateMenu, CloseModalButton } from './styles';\r\n\r\ninterface Props {\r\n  show?: boolean;\r\n  onCloseModal: (e: any) => void;\r\n  style: CSSProperties;\r\n  closeButton?: boolean;\r\n}\r\n\r\nconst Menu: FC<Props> = ({ children, style, show, onCloseModal, closeButton }) => {\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation();\r\n    // stopPropagation 하면 부모태그로 이벤트가 버블링 되지 않음.\r\n  }, []);\r\n\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <CreateMenu onClick={onCloseModal}>\r\n      <div style={style} onClick={stopPropagation}>\r\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\r\n        {children}\r\n      </div>\r\n    </CreateMenu>\r\n  );\r\n};\r\n\r\nMenu.defaultProps = {\r\n  closeButton: true,\r\n};\r\nexport default Menu;\r\n","import React, { useCallback, VFC, SetStateAction } from 'react';\r\nimport Modal from '@components/Modal';\r\nimport { Button, Input, Label } from '@pages/Signup/styles';\r\nimport useInput from '@hooks/useInput';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowCreateChannelModal: (flag: boolean) => void;\r\n}\r\n\r\nconst CreateChannelModal: VFC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\r\n  console.log(show);\r\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const {\r\n    data: userData,\r\n    error,\r\n    revalidate,\r\n    mutate,\r\n  } = useSWR<IUser | false>('/api/users', fetcher, {\r\n    dedupingInterval: 2000,\r\n  });\r\n  const { data: channelData, revalidate: revalidateChannel } = useSWR<IChannel[]>(\r\n    userData ? `/api/workspaces/${workspace}/channels` : null,\r\n    fetcher,\r\n  );\r\n  const onCreateChannel = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      axios\r\n        .post(\r\n          `/api/workspaces/${workspace}/channels`,\r\n          {\r\n            name: newChannel,\r\n          },\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        )\r\n        .then(() => {\r\n          setShowCreateChannelModal(false);\r\n          revalidateChannel();\r\n          setNewChannel('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newChannel],\r\n  );\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onCreateChannel}>\r\n        <Label id=\"channel-label\">\r\n          <span>채널 이름</span>\r\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\r\n        </Label>\r\n        <Button type=\"submit\">생성하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateChannelModal;\r\n","import React, { useCallback, VFC } from 'react';\r\nimport Modal from '@components/Modal';\r\nimport { Button, Input, Label } from '@pages/Signup/styles';\r\nimport useInput from '@hooks/useInput';\r\nimport axios from 'axios';\r\nimport useSWR from 'swr';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface Props {\r\n  show?: boolean;\r\n  onCloseModal: () => void;\r\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\r\n}\r\n\r\nconst InviteWorkspaceModal: VFC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\r\n  const [newInviteMember, onChangeNewInviteMember, setNewInviteMember] = useInput('');\r\n  const { data: userData } = useSWR<IUser | false>('/api/users', fetcher, {\r\n    dedupingInterval: 2000,\r\n  });\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const { revalidate: revalidateMembers } = useSWR<IChannel[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n  const onInviteSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newInviteMember || !newInviteMember.trim()) return;\r\n\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/members`, {\r\n          email: newInviteMember,\r\n        })\r\n        .then(() => {\r\n          revalidateMembers();\r\n          setNewInviteMember('');\r\n          setShowInviteWorkspaceModal(false);\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response.data, {\r\n            position: 'bottom-center',\r\n          });\r\n        });\r\n    },\r\n    [newInviteMember],\r\n  );\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteSubmit}>\r\n        <Label>\r\n          <span>이메일</span>\r\n          <Input id=\"member\" type=\"email\" value={newInviteMember} onChange={onChangeNewInviteMember} />\r\n        </Label>\r\n        <Button type=\"submit\">사용자 초대</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteWorkspaceModal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\r\n  background: transparent;\r\n  border: none;\r\n  width: 26px;\r\n  height: 26px;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  ${({ collapse }) =>\r\n    collapse &&\r\n    `\r\n    & i {\r\n      transform: none;\r\n    }\r\n  `};\r\n`;\r\n","// import useSocket from '@hooks/useSocket';\r\nimport { CollapseButton } from '@components/DMList/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\nconst ChannelList: FC = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  // const [socket] = useSocket(workspace);\r\n  const {\r\n    data: userData,\r\n    error,\r\n    revalidate,\r\n    mutate,\r\n  } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Channels</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          channelData?.map((channel) => {\r\n            return (\r\n              <NavLink\r\n                key={channel.name}\r\n                activeClassName=\"selected\"\r\n                to={`/workspace/${workspace}/channel/${channel.name}`}\r\n              >\r\n                <span># {channel.name}</span>\r\n              </NavLink>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChannelList;\r\n","// import useSocket from '@hooks/useSocket';\r\nimport { CollapseButton } from '@components/DMList/styles';\r\nimport { IUser, IUserWithOnline } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\nimport useSocket from '@hooks/useSocket';\r\n\r\nconst DMList: FC = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const {\r\n    data: userData,\r\n    error,\r\n    revalidate,\r\n    mutate,\r\n  } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n  //const [socket] = useSocket(workspace);\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n  const [onlineList, setOnlineList] = useState<number[]>([]);\r\n  const [socket, disconnect] = useSocket(workspace);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('DMList: workspace 바꼈다', workspace);\r\n    setOnlineList([]);\r\n  }, [workspace]);\r\n\r\n  useEffect(() => {\r\n    socket?.on('onlineList', (data: number[]) => {\r\n      console.log('DDATA: ', data);\r\n      setOnlineList(data);\r\n    });\r\n    // socket?.on('dm', onMessage);\r\n    // console.log('socket on dm', socket?.hasListeners('dm'), socket);\r\n    return () => {\r\n      // socket?.off('dm', onMessage);\r\n      // console.log('socket off dm', socket?.hasListeners('dm'));\r\n      socket?.off('onlineList');\r\n    };\r\n  }, [socket]);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Direct Messages</span>\r\n      </h2>\r\n      <div>\r\n        {onlineList && console.log('onlineList: ', onlineList)}\r\n        {!channelCollapse &&\r\n          memberData?.map((member) => {\r\n            const isOnline = onlineList.includes(member.id);\r\n            console.log('isOnline ? ', isOnline, 'onlineList ? ', onlineList, '  memberID: ', member.id);\r\n            return (\r\n              <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\r\n                <span>{isOnline ? 'O' : 'X'}</span>\r\n                <span>{member.nickname}</span>\r\n                {member.id === userData?.id && <span> (나)</span>}\r\n              </NavLink>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DMList;\r\n","import React, { useState, VFC, useCallback, useEffect } from 'react';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport { Button, Input, Label } from '@pages/Signup/styles';\r\nimport { Redirect, Switch, Route, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport useSWR, { mutate } from 'swr';\r\nimport gravatar from 'gravatar';\r\nimport loadable from '@loadable/component';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  AddButton,\r\n  Channels,\r\n  Chats,\r\n  Header,\r\n  LogOutButton,\r\n  MenuScroll,\r\n  ProfileImg,\r\n  ProfileModal,\r\n  RightMenu,\r\n  WorkspaceButton,\r\n  WorkspaceModal,\r\n  WorkspaceName,\r\n  Workspaces,\r\n  WorkspaceWrapper,\r\n} from '@layouts/Workspace/styles';\r\nimport Menu from '@components/Menu';\r\nimport Modal from '@components/Modal';\r\nimport CreateChannelModal from '@components/CreateChannelModal';\r\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal';\r\nimport InviteChannelModal from '@components/InviteChannelModal';\r\nimport { IUser, IChannel } from '@typings/db';\r\nimport useInput from '@hooks/useInput';\r\nimport ChannelList from '@components/ChannelList';\r\nimport DMList from '@components/DMList';\r\nimport useSocket from '@hooks/useSocket';\r\n\r\nconst Channel = loadable(() => import('@pages/Channel'));\r\nconst DirectMessage = loadable(() => import('@pages/DirectMessage'));\r\n\r\nconst Workspace: VFC = () => {\r\n  const [showUserMenu, setShowUserMenu] = useState(false);\r\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\r\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkspace] = useInput('');\r\n  const [newWorkspaceUrl, onChangeNewWorkspaceUrl, setNewWorkspaceUrl] = useInput('');\r\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\r\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\r\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\r\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\r\n\r\n  const { workspace } = useParams<{ workspace: string }>();\r\n  const {\r\n    data: userData,\r\n    error,\r\n    revalidate,\r\n    mutate,\r\n  } = useSWR<IUser | false>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n  // const { data, error, revalidate, mutate } = useSWR('/api/users?123', fetcher2);\r\n  // 쿼리 ? # 등 뒤에 붙여서 서버는 같은 요청으로 인식하지만 실제로는 다른 fetcher 요청 보낼 수 있다.\r\n  const [socket, disconnect] = useSocket(workspace);\r\n  useEffect(() => {\r\n    if (channelData && userData && socket) {\r\n      console.log('Socket', socket);\r\n      socket.emit('login', {\r\n        id: userData.id,\r\n        channels: channelData.map((v) => v.id),\r\n      });\r\n    }\r\n  }, [channelData, userData, socket]);\r\n  // 내가 로그인한 것을 서버에 알려주는 부분\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, [workspace, disconnect]);\r\n  // workspace가 바뀌면 socket disconnect !\r\n\r\n  const onLogout = useCallback(() => {\r\n    axios\r\n      .post('/api/users/logout', null, {\r\n        withCredentials: true,\r\n      })\r\n      .then(() => {\r\n        mutate(false, false);\r\n      })\r\n      .catch((error) => {});\r\n  }, []);\r\n\r\n  const onClickUserProfile = useCallback((e) => {\r\n    e.stopPropagation();\r\n    setShowUserMenu((prev) => !prev);\r\n  }, []);\r\n\r\n  const onClickCreateWorksapce = useCallback((e) => {\r\n    setShowCreateWorkspaceModal(true);\r\n  }, []);\r\n\r\n  const onCreateWorkspace = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newWorkspace || !newWorkspace.trim()) return;\r\n      if (!newWorkspaceUrl || !newWorkspaceUrl.trim()) return;\r\n      //  !newWorkspace.trim() trim 하지 않으면 띄어쓰기만 넣어도 form된다.\r\n      axios\r\n        .post(\r\n          '/api/workspaces',\r\n          {\r\n            workspace: newWorkspace,\r\n            url: newWorkspaceUrl,\r\n          },\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        )\r\n        .then(() => {\r\n          revalidate();\r\n          setShowCreateWorkspaceModal(false);\r\n          setNewWorkspace('');\r\n          setNewWorkspaceUrl('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newWorkspace, newWorkspaceUrl],\r\n  );\r\n\r\n  const onCloseModal = useCallback(() => {\r\n    setShowCreateWorkspaceModal(false);\r\n    setShowCreateChannelModal(false);\r\n    setShowInviteWorkspaceModal(false);\r\n    setShowInviteChannelModal(false);\r\n  }, []);\r\n\r\n  const toggleWorkspaceModal = useCallback(() => {\r\n    setShowWorkspaceModal((prev) => !prev);\r\n  }, []);\r\n\r\n  const onClickAddChannel = useCallback((e) => {\r\n    setShowCreateChannelModal(true);\r\n  }, []);\r\n\r\n  const onClickInviteWorkspace = useCallback((e) => {\r\n    setShowInviteWorkspaceModal(true);\r\n  }, []);\r\n\r\n  if (!userData) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  if (userData === undefined) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <RightMenu>\r\n          <span onClick={onClickUserProfile}>\r\n            <ProfileImg src={gravatar.url(userData.email, { s: '20px', d: 'retro' })} alt={userData.email} />\r\n            {showUserMenu && (\r\n              <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onClickUserProfile}>\r\n                <ProfileModal>\r\n                  <img src={gravatar.url(userData.email, { s: '30px', d: 'retro' })} alt={userData.email} />\r\n                  <div>\r\n                    <span id=\"profile-name\">{userData.nickname}</span>\r\n                    <span id=\"profile-active\">Active</span>\r\n                  </div>\r\n                </ProfileModal>\r\n                <LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\r\n              </Menu>\r\n            )}\r\n          </span>\r\n        </RightMenu>\r\n      </Header>\r\n      <WorkspaceWrapper>\r\n        <Workspaces>\r\n          {userData?.Workspaces?.map((ws) => (\r\n            <Link key={ws.id} to={`/workspace/${123}/channel/일반`}>\r\n              <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\r\n            </Link>\r\n          ))}\r\n          <AddButton onClick={onClickCreateWorksapce}>+</AddButton>\r\n        </Workspaces>\r\n        <Channels>\r\n          <WorkspaceName onClick={toggleWorkspaceModal}>SSlack</WorkspaceName>\r\n          <MenuScroll>\r\n            <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\r\n              <WorkspaceModal>\r\n                <h2>SSlack</h2>\r\n                <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\r\n                <button onClick={onClickAddChannel}>채널만들기</button>\r\n                <button onClick={onLogout}>로그아웃</button>\r\n              </WorkspaceModal>\r\n            </Menu>\r\n            <ChannelList />\r\n            <DMList />\r\n          </MenuScroll>\r\n        </Channels>\r\n        <Chats>\r\n          <Switch>\r\n            <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel}></Route>\r\n            <Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage}></Route>\r\n          </Switch>\r\n        </Chats>\r\n      </WorkspaceWrapper>\r\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\r\n        <form onSubmit={onCreateWorkspace}>\r\n          <Label id=\"workspace-label\">\r\n            <span>워크스페이스 이름</span>\r\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\r\n          </Label>\r\n          <Label id=\"workspace-url-label\">\r\n            <span>워크스페이스 Url</span>\r\n            <Input id=\"workspace\" value={newWorkspaceUrl} onChange={onChangeNewWorkspaceUrl} />\r\n          </Label>\r\n          <Button type=\"submit\">생성하기</Button>\r\n        </form>\r\n      </Modal>\r\n      <CreateChannelModal\r\n        show={showCreateChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowCreateChannelModal={setShowCreateChannelModal}\r\n      />\r\n      <InviteWorkspaceModal\r\n        show={showInviteWorkspaceModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\r\n      />\r\n      <InviteChannelModal\r\n        show={showInviteChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteChannelModal={setShowInviteChannelModal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n"],"sourceRoot":""}