{"version":3,"sources":["webpack://sslack/./pages/Signup/index.tsx"],"names":["data","error","useSWR","fetcher","email","onChangeEmail","useInput","nickname","onChangeNickname","password","setPassword","useState","checkPassword","setCheckPassword","mismatchError","setMismatchError","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","onSubmitSignupForm","useCallback","e","preventDefault","axios","then","response","console","log","catch","finally","onChangePassword","target","value","onChangeCheckPassword","undefined","to","id","onSubmit","type","name","onChange"],"mappings":"0NAQA,MAgHA,EAhHe,KACb,MAAM,KAAEA,EAAF,MAAQC,IAAUC,QAAO,aAAcC,MAEtCC,EAAOC,IAAiBC,OAAS,KACjCC,EAAUC,IAAoBF,OAAS,KACvCG,EAAUC,IAAeC,cAAS,KAClCC,EAAeC,IAAoBF,cAAS,KAC5CG,EAAeC,IAAoBJ,eAAS,IAC5CK,EAAaC,IAAkBN,cAAS,KACxCO,EAAeC,IAAoBR,eAAS,GAE7CS,GAAqBC,kBACxBC,IACCA,EAAEC,iBACGT,IACHG,EAAe,IAEfE,GAAiB,GACjBK,SACQ,aAAc,CAGlBpB,QACAG,WACAE,aAEDgB,MAAMC,IACLC,QAAQC,IAAIF,GACZP,GAAiB,MAElBU,OAAO5B,IACN0B,QAAQC,IAAI3B,EAAMyB,UAClBT,EAAehB,EAAMyB,SAAS1B,SAE/B8B,SAAQ,YAGf,CAAC1B,EAAOG,EAAUE,EAAUG,EAAeE,IAGvCiB,GAAmBV,kBACtBC,IACCZ,EAAYY,EAAEU,OAAOC,OACrBlB,EAAiBO,EAAEU,OAAOC,QAAUrB,KAEtC,CAACA,IAGGsB,GAAwBb,kBAC3BC,IACCT,EAAiBS,EAAEU,OAAOC,OAC1BlB,EAAiBO,EAAEU,OAAOC,QAAUxB,KAEtC,CAACA,IAGH,YAAa0B,IAATnC,EACK,sCAELA,GACF2B,QAAQC,IAAI5B,GACL,gBAAC,KAAD,CAAUoC,GAAG,kCAIpB,uBAAKC,GAAG,aACN,gBAAC,KAAD,eACA,gBAAC,KAAD,CAAMC,SAAUlB,GACd,gBAAC,KAAD,CAAOiB,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CAAOE,KAAK,QAAQF,GAAG,QAAQG,KAAK,QAAQP,MAAO7B,EAAOqC,SAAUpC,MAGxE,gBAAC,KAAD,CAAOgC,GAAG,kBACR,mCACA,2BACE,gBAAC,KAAD,CAAOE,KAAK,OAAOF,GAAG,WAAWG,KAAK,WAAWP,MAAO1B,EAAUkC,SAAUjC,MAGhF,gBAAC,KAAD,CAAO6B,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CAAOE,KAAK,WAAWF,GAAG,WAAWG,KAAK,WAAWP,MAAOxB,EAAUgC,SAAUV,MAGpF,gBAAC,KAAD,CAAOM,GAAG,wBACR,uCACA,2BACE,gBAAC,KAAD,CACEE,KAAK,WACLF,GAAG,iBACHG,KAAK,iBACLP,MAAOrB,EACP6B,SAAUP,KAGbpB,GAAiB,gBAAC,KAAD,0BAChBP,GAAY,gBAAC,KAAD,qBACbS,GAAe,gBAAC,KAAD,KAAQA,GACvBE,GAAiB,gBAAC,KAAD,+BAEpB,gBAAC,KAAD,CAAQqB,KAAK,UAAb,SAEF,gBAAC,KAAD,mBAEE,gBAAC,KAAD,CAAMH,GAAG,UAAT","file":"337.js","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Success, Form, Error, Label, Input, LinkContainer, Button, Header } from './styles';\r\nimport useInput from '@hooks/useInput';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\n\r\nconst SignUp = () => {\r\n  const { data, error } = useSWR('/api/users', fetcher);\r\n\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [nickname, onChangeNickname] = useInput('');\r\n  const [password, setPassword] = useState('');\r\n  const [checkPassword, setCheckPassword] = useState('');\r\n  const [mismatchError, setMismatchError] = useState(false);\r\n  const [signUpError, setSignUpError] = useState('');\r\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\r\n\r\n  const onSubmitSignupForm = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!mismatchError) {\r\n        setSignUpError(''); // 비동기 요청에서 set state 하는 것들은 초기화를 해주는 것이 좋다.\r\n        // 안그러면 연달아 요청할 때 그전 state가 남아있을 수 있기 때문\r\n        setSignUpSuccess(false);\r\n        axios\r\n          .post('/api/users', {\r\n            // '/api/users' -> localhost 3095 가 localhost 3095에게 api 요청 ( webpack의 proxy 설정 덕분에 )\r\n            // 'http://localhost:3095/api/users' -> localhost 3090 이 localhost 3095 에게 api 요청 하는 의미\r\n            email,\r\n            nickname,\r\n            password,\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n            setSignUpSuccess(true);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.response);\r\n            setSignUpError(error.response.data);\r\n          })\r\n          .finally(() => {});\r\n      }\r\n    },\r\n    [email, nickname, password, checkPassword, mismatchError],\r\n  );\r\n\r\n  const onChangePassword = useCallback(\r\n    (e) => {\r\n      setPassword(e.target.value);\r\n      setMismatchError(e.target.value !== checkPassword);\r\n    },\r\n    [checkPassword],\r\n  );\r\n\r\n  const onChangeCheckPassword = useCallback(\r\n    (e) => {\r\n      setCheckPassword(e.target.value);\r\n      setMismatchError(e.target.value !== password);\r\n    },\r\n    [password],\r\n  );\r\n\r\n  if (data === undefined) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n  if (data) {\r\n    console.log(data);\r\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\r\n  }\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <Header>SSlack</Header>\r\n      <Form onSubmit={onSubmitSignupForm}>\r\n        <Label id=\"email-label\">\r\n          <span>이메일 주소</span>\r\n          <div>\r\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"nickname-label\">\r\n          <span>닉네임</span>\r\n          <div>\r\n            <Input type=\"text\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={onChangeNickname} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"password-label\">\r\n          <span>비밀번호</span>\r\n          <div>\r\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"password-check-label\">\r\n          <span>비밀번호 확인</span>\r\n          <div>\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password-check\"\r\n              name=\"password-check\"\r\n              value={checkPassword}\r\n              onChange={onChangeCheckPassword}\r\n            />\r\n          </div>\r\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\r\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\r\n          {signUpError && <Error>{signUpError}</Error>}\r\n          {signUpSuccess && <Success>회원가입 되었습니다! 로그인 해주세요.</Success>}\r\n        </Label>\r\n        <Button type=\"submit\">회원가입</Button>\r\n      </Form>\r\n      <LinkContainer>\r\n        이미 회원이신가요?&nbsp;\r\n        <Link to=\"/Login\">로그인 하러 가기</Link>\r\n      </LinkContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"sourceRoot":""}